% select time window
cfg = [];
cfg.toilim = [0.35 0.85];
data_timewindow = ft_redefinetrial(cfg,data_clean_EEG_responselocked);

%Now that we have extracted the time window of interest we can continue with calculating the cross-spectral density matrix:

% Freqanalysis for beamformer
cfg = [];
cfg.method       = 'mtmfft';
cfg.taper        = 'dpss';
cfg.output       = 'powandcsd';
cfg.keeptrials   = 'no';
cfg.foi          = 18;
cfg.tapsmofrq    = 4;
 
% for common filter over conditions and full duration
powcsd_all      = ft_freqanalysis(cfg, data_timewindow);
 
% for conditions
cfg.trials       = find(data_timewindow.trialinfo(:,1) == 256);
powcsd_left      = ft_freqanalysis(cfg, data_timewindow);
cfg.trials       = find(data_timewindow.trialinfo(:,1) == 4096);
powcsd_right     = ft_freqanalysis(cfg, data_timewindow);

%(EEG) Lead field calculation
%The leadfield is calculated using ft_prepare_leadfield.

% common grid/filter
cfg                 = [];
cfg.elec            = powcsd_all.elec; 
cfg.vol             = headmodel_eeg;
cfg.reducerank      = 3; % default is 3 for EEG, 2 for MEG
cfg.grid.resolution = 1;   % use a 3-D grid with a 0.5 cm resolution
cfg.grid.unit       = 'cm';
cfg.grid.tight      = 'yes';
[grid] = ft_prepare_leadfield(cfg);




